// Code generated for package portal by go-bindata DO NOT EDIT. (@generated)
// sources:
// ../../portal/build/favicon.ico
package portal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faviconIco = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5d\x0d\x70\x1b\xc7\x75\x3e\x9a\xb1\x55\xcb\x4d\xa5\x26\x75\x65\x49\x94\xb0\x6f\x01\x1e\x68\x83\xb7\x07\xe0\x48\x8a\xa4\xed\x92\x6d\x92\x36\x4d\xe4\x4c\xdb\x44\x75\xc7\x93\x38\x69\x26\x75\x52\xa7\xb5\x26\xd3\xb4\x76\x7f\x62\xd2\xe3\x64\xec\x4e\xc6\x71\xdd\x36\xe3\x2a\x9d\x69\x26\x9e\x3a\x6d\x3d\x96\x64\x8b\x92\x1c\x45\x92\x49\x82\xb4\xa9\x5f\x4b\xae\x86\xa4\x78\x7b\x14\x29\xc9\xfa\xc3\x51\xb6\x28\xcb\x16\x2d\x91\xb8\xcc\x1d\x0e\x24\x00\x02\x24\x40\x2c\x6e\x0f\x14\xbe\x99\x37\xd2\x13\x4e\x77\xef\xed\xf7\x76\x6f\x6f\x77\xdf\xae\x20\x54\x08\x15\x42\xfb\x46\xf3\x4f\x24\xdc\x71\x46\x10\x7e\x5b\x10\x84\x1a\x41\x10\xda\x05\x41\x38\x21\xc4\xff\xbd\x8c\x32\xca\x28\xa3\x8c\x32\xca\x28\xa3\x8c\x32\xca\x28\xa3\x8c\x32\xca\x28\xa3\x8c\x32\x16\x23\xc8\x8a\xb7\x6f\x23\x88\x36\xca\x48\xfd\xa6\x04\xf4\x19\x02\xf4\x05\x02\xf4\x35\x02\xf4\x08\xc1\xf4\x1d\x02\xf4\x5d\x02\xf4\x02\x01\x3a\x6c\x8a\x0c\x94\x12\x50\x7b\x08\xd2\x7e\x4e\x40\xfd\x21\x41\xea\x23\x32\x56\xd7\x2b\x9e\x81\x95\xbc\x7d\x29\x63\x7e\x84\xd6\x1c\x5f\x45\x80\x7e\x83\x00\xfd\x5f\x02\x74\x88\x00\x9d\x22\x40\x0d\x46\x72\x8a\x20\x6d\xb3\x84\xe8\xa3\xb5\x78\xb8\x4e\x10\x8c\x0a\xde\xfe\x96\x21\x08\x92\x57\x53\x64\xd0\x9e\x24\x98\x1e\x26\x40\x63\x0c\xf9\x9e\x4f\x4e\x13\xa0\x3f\x96\x81\xfe\x7e\x20\xd0\x7f\x0b\xef\x72\xb8\x91\x80\xd0\xc8\xaf\x11\xd0\x1e\xb4\x39\x77\x8a\xef\xb9\xe4\x12\x01\xed\x39\x69\xad\x8a\x79\x97\xcd\x62\x06\x81\xe3\x7e\x82\xb5\xe7\x09\xd0\xcb\x2e\xe0\x3c\x93\x98\xef\x9b\x0e\x19\xd1\x3f\x28\xbf\x1f\xd8\x21\x88\x06\x91\x0c\xea\x26\x02\xf4\xba\x0b\x38\xce\x55\xf6\xcb\x1e\xed\x77\x79\x97\x5d\x29\x23\x88\x46\x96\x4b\xa0\xfe\x6b\x89\xf1\x9e\x2a\x98\xee\x0c\xc0\x90\xcc\xbb\x2c\x4b\x0b\x46\x85\x84\xd5\x3f\xb7\xbf\xcd\xf8\x73\x58\xb8\x4c\x99\x71\xac\xac\x3a\xbb\x94\x77\xc9\xba\x1d\x01\x34\x72\x07\x01\xba\xcd\x05\x9c\x15\x43\x4e\x94\xdf\x09\xd9\x41\x80\x7e\x89\x00\xbd\xe8\x02\x9e\x8a\xda\x16\x10\xac\xfd\x8b\xf9\x0d\xc3\xbb\xbc\xdd\x82\x0d\x82\x51\x29\x63\xfa\xb4\xc3\xdf\xef\x7c\x05\xd3\xc3\x01\x3c\xbc\x96\x77\xd9\xf3\x86\xb4\xf6\xe4\x6f\x12\x4c\x5f\xe7\xce\x07\x1f\x39\x23\xc3\x50\x03\x6f\x0e\x78\xa1\xd6\xab\xad\x91\x30\xed\x77\x01\x0f\x3c\xe5\xaa\x0c\xf4\xcb\xbc\xb9\x70\x1a\xb5\x1e\xf5\x4e\x7b\x0c\x95\x77\xf9\xbb\x41\xa6\x24\xd0\xfe\x82\x37\x27\x4e\x21\x88\x87\xab\xcd\xb6\xcf\x05\xe5\xee\x26\x89\x11\x4c\x1f\xe6\xcd\x4d\xb1\x11\x44\x07\x5b\x83\xd0\x77\x45\x86\x63\xbc\xcb\xdb\x8d\x12\x93\x40\x7b\x88\x37\x47\xc5\xc2\x3a\xbc\xaf\x3a\x0c\xaf\x7f\xa4\xc0\x2f\x0d\x53\xc2\xf0\xba\x11\x84\xfd\x06\x81\x01\xde\xe5\xee\x26\x31\xbf\x81\xbe\xc4\x9b\xab\x5c\x21\xae\xbd\x80\x01\x2e\xac\x98\xef\xba\x20\x3a\xb2\x3c\x0c\xdd\xe3\x09\xee\xd3\x25\x0c\x11\x23\x08\x6f\x19\x04\x8e\x17\xab\x5c\x4f\x12\xa0\xdb\x24\x44\x9f\x22\x48\xdd\x28\x61\xf5\x81\x5a\x50\x3f\x23\x61\xf5\xd3\x96\x00\xdd\x20\x23\xf5\x5b\xd6\x5c\x72\x7c\x9d\xc8\xff\x13\xa0\x93\x9c\x62\xe0\x8a\xec\xa1\x21\x67\x18\x5c\x38\x02\x01\xe3\x96\x6a\x88\x1e\x13\x41\x9f\x14\x41\xdf\x2d\xc2\xd8\x83\x64\xc5\xf9\xdb\x32\x5d\x1b\x82\x1e\x35\x1b\xf7\xa9\xb2\xdb\x08\x43\xaf\x11\x84\xa3\x06\x01\xb5\x90\x32\x8c\x12\xa0\x3f\x93\x81\xfe\x69\xcd\xea\xc1\x4f\x2e\xc4\x3f\xb2\xe2\xed\xdb\x24\x44\x5b\xec\xb1\x89\x41\x87\x63\xe0\x64\x2d\x9c\x98\xb7\x5e\xf1\x84\x88\xf4\x36\x11\x74\x23\x4d\xc6\x45\xd0\x5f\xf0\x81\x7e\x9f\x20\x18\x95\xe6\x75\x61\xd8\xb7\x29\x37\xee\xd3\x65\xaf\x11\x82\x7d\x46\x1e\x7d\x85\x49\x6b\xfe\x15\xab\xeb\x37\xd8\xcf\x66\x09\xeb\x9b\x05\xd3\x67\xe3\xf3\xfd\x8e\xc4\x40\xaf\x5b\xd7\x96\xf8\x41\xf7\x8b\xa0\x5f\xcd\xc0\xff\x8c\x60\xfd\x9d\x1a\x74\x7e\x53\x18\xba\xaf\x2e\x8c\xff\xe4\xf7\x43\xa7\x11\x82\x83\x06\x81\xc1\x4c\xe5\x74\x4d\xc2\xda\x7f\x84\xe0\x84\xc7\x09\xdf\xad\x76\x01\xb4\xbf\x22\x40\xcf\x15\x3f\x06\xd4\xef\x3b\xe1\x53\xbe\x10\x41\xef\x99\x93\xfb\x34\xb9\x0b\x8d\x0e\x13\x7c\xe0\x54\x18\xf6\x4c\x15\x1e\x0b\xdd\x46\x10\x0e\x1b\x04\x86\x0c\x19\xe8\x4b\xb5\x3e\xea\xe5\x51\x06\xf1\x38\x50\xff\x89\x00\x7d\xbf\x88\x31\x70\x3d\xbe\xde\xd0\x3d\xf0\x83\xfe\x85\x7c\xb8\x4f\x95\xe8\x64\x00\x0d\x69\x21\xdc\xa7\x17\x16\x07\x7b\xa6\xc2\xd0\xe7\x8a\xba\x61\xb6\x3b\x04\xb4\xdd\x45\x8c\x81\x01\xf7\xcc\x17\x19\x37\x89\xa0\x1f\x5d\x38\xff\x33\xe2\x87\xf3\x97\x25\x18\x38\x1e\x82\xde\x71\xb3\xdf\x97\x7b\xfd\xef\x8a\xd6\xc1\x41\x3f\xef\x92\x48\x85\x51\x41\x30\x7d\x98\x00\x9d\x28\x52\x0c\xfc\x80\xb7\x87\x82\xd5\xe7\x8b\xde\xcf\x82\xfb\x24\xb9\xe6\x47\xd1\xcf\x06\xbd\x47\x9a\x43\xf0\xe6\xee\xe4\xf1\x81\x4c\x12\x84\x37\x7e\x69\xc6\x20\xef\x72\xc8\x06\xc9\x43\x9b\x24\xd0\xce\x16\x81\xff\x8f\xf8\xaf\x2f\xb5\xea\xfe\x20\x5b\xfe\xc7\xbe\x92\xfe\x94\x90\x77\xdf\x9f\x85\x70\xef\xa1\xd4\xbe\x82\xf9\x5d\xf8\xc6\x4f\xf8\xf8\x9d\x1f\xe4\xaa\xa1\xd5\xf6\xf8\x01\xd3\x18\x90\x81\xfe\x37\x4f\xbf\xcc\x7a\xca\x92\xfb\x6a\xac\x3f\x3b\xd7\xf3\x14\xe5\xd0\xd2\x10\xf4\x3d\x19\xc6\x3d\x27\x65\xbc\xef\x09\xe7\x3c\x2d\x1c\x21\x1f\xbd\x9d\x80\xfa\x36\xe3\x18\x98\xaa\x85\x13\x84\x97\x4f\x22\x8e\x6e\x61\xc7\x7f\xb4\x4f\x51\x8c\x9b\x79\xf9\xe2\x04\x14\x71\xe8\xb7\x08\xd0\x63\x2c\x63\x40\x02\x6d\x3b\x0f\x5f\xee\xf4\xe8\x2b\xcd\x77\x35\x23\xfe\x27\x7c\x6b\x2f\xde\xc5\xc3\x0f\xa7\x11\x44\x83\xc8\x1e\x8b\x64\xd7\x0e\x20\x75\x9d\xd3\x7e\x88\x48\x7f\x9c\x59\xdd\xc7\x63\x7f\xef\xb4\xfd\x3c\x11\xf4\x6a\x77\x9b\xfd\xb7\x52\xee\x07\x88\x58\xef\x67\xd4\xdf\x1b\x71\xcf\xb7\xac\x73\x20\xa0\xfe\x2d\xcb\x6f\x81\x00\x1a\xb9\xc3\x29\xdb\x7d\xbe\x0b\x5e\x86\x7d\xbe\x07\x9c\xb2\xdb\x4d\xd8\x20\x18\x95\x04\x68\x1f\xbb\x18\xd0\xfe\xd1\x29\xdb\xfd\x28\xba\x91\x09\xff\x48\xd7\x5a\x5b\x8d\x8f\x39\x65\xb7\xdb\x60\xaf\x79\x63\x35\x3e\x34\xe0\x94\xdd\x22\xe8\x7b\x98\xd4\x7d\xa4\x7f\xd3\x29\x9b\xdd\x0a\x7b\xfe\x90\x49\x1b\x10\x44\x6a\xd0\x09\x9b\xab\x91\xfe\x2d\x11\xf4\x03\x05\xf2\xff\xbe\xdf\xaf\x7f\xdc\x09\x7b\xdd\x0c\xf3\x9b\x50\x02\x3a\xce\xe4\x5b\x10\xd1\xa7\x9c\xb4\x5d\x44\x63\x35\x7e\x18\xfb\xbe\x08\xfa\x68\xbe\xfc\xfb\xd1\xd8\x7f\x39\x69\xab\x9b\x41\x30\x6d\x67\xf4\x1d\x70\x94\x97\x0f\x35\x5e\x5d\xf1\xc3\xd8\x73\x22\x44\xc7\x72\xec\xf7\x7d\x9e\x97\xad\x6e\x43\x7c\x6c\x90\x49\x3f\x20\xc6\x7b\x6f\xa2\xaa\xaa\xd3\xb7\xda\x73\x42\x1d\x22\xe8\xd7\xb3\xf0\x7f\xe5\x46\xfc\xe6\x9b\x0b\x04\xab\xff\xc3\xa8\x0d\x98\x35\x7f\xc2\x0b\x81\xaa\xf1\x4f\x88\xa0\x3f\x24\x82\xde\x9b\xd2\xf6\x43\x74\x17\x6f\xdb\xdc\x06\x09\xab\x9f\x66\xc4\xff\xbf\xf3\xf6\x25\x13\xcc\xbe\x82\x88\xf5\x76\x11\xa2\x23\x22\xd2\xdb\x78\xdb\xe3\x36\x28\xca\xa1\x9b\x43\x70\xf0\x43\xb9\xf0\xb5\xef\xfb\x79\xfb\x32\x17\x14\xe8\x19\x0e\x43\x6f\x9f\x82\xba\x37\x36\xac\xde\xb3\xa0\x75\xb8\x8b\x15\x21\x88\x9c\x8c\xcf\x6d\x77\x1a\x21\x38\x64\xc8\x0b\x5b\xfb\xfe\x91\x19\x4b\xbc\x7d\xc9\x84\x90\x2f\x72\xbb\x02\x11\x23\x49\xae\x2a\x10\xe9\x50\xa0\x67\x83\x5b\x6d\x76\x12\x21\x78\xe3\x85\xf4\xb5\xef\x21\x2b\x0f\xe2\x48\x5e\x6b\xdf\x65\x3c\x2c\xf2\xf6\x25\x13\xc2\xb8\x67\x7d\x1a\xff\xc9\x72\xb1\x0e\xba\x37\x29\xb8\xf7\x1e\xde\x76\xf2\x42\x78\xed\xfe\xf5\x73\xac\x6f\x34\x42\xf0\xa6\x11\xcc\x61\xed\xbb\x84\x87\x3f\xc7\xdb\x97\x4c\x50\x70\xe4\x89\x39\xf8\x9f\x11\x1c\xe9\x57\x70\xf7\x63\xf5\xde\xee\x35\xbc\x6d\x66\x8d\x3b\x3d\xfa\xca\xec\x7b\xc1\x19\x95\x0a\xec\x89\xcd\xbf\xde\x31\x9e\x27\x97\xad\xaf\x20\x83\xf6\xd7\x4e\xfb\x95\x0b\xea\xf1\xde\x9d\x0a\x74\xcf\xcf\xff\x8c\x4c\x29\x10\xe9\x0d\x43\xcf\x43\xeb\x7c\xfb\x7e\x83\xb7\xfd\x2c\x20\x82\xfe\x13\x3f\xe8\x27\x45\x1c\x7d\xfa\x4e\x1c\xad\x4e\xff\x3d\x8c\x3a\x3f\xcc\x6f\xdd\x73\xbc\xaf\x90\x9c\x27\x27\x83\xf6\x24\x0f\xdf\xac\xfd\x18\x81\x7e\x23\x88\x46\x96\x67\xfa\xbd\x09\xbd\x72\xa5\x19\xb6\x1a\x8d\xb0\xd3\xa8\x87\xd7\xf3\x89\x03\x53\x3e\x50\x50\xcf\x8b\x21\xdc\xeb\xaa\xb5\xef\xf9\x22\x3e\x46\x96\x32\x16\x72\xc8\x8f\xa2\x1b\x7d\xbe\x73\xb7\x0b\x56\x1f\xa0\xfb\xec\xc2\xd6\xbf\x27\xf7\x15\x86\xfe\x93\x87\x6f\xe6\x7b\xc7\x8e\xc1\x09\x02\xb4\x43\x02\xba\x21\x39\x5f\xa9\x19\x6d\x99\xba\x1b\x36\x1b\x09\x69\x82\x57\x8d\x75\xf0\x0b\xa3\x0e\xba\x72\x8e\x83\x30\x44\xfe\x81\x87\x6f\xac\x50\x8d\xf5\x67\xb3\x8c\x89\x4d\x88\x38\xba\x45\x46\x87\xfb\xf2\x59\xfb\x9e\x51\x70\xe4\x34\x0f\xdf\x64\xa4\xdd\x9f\xe1\x7d\xf4\xae\x0c\xea\xa6\x3a\x6f\xff\x1f\x26\x73\x9f\x2e\x8d\xd0\x61\x34\xc0\x6e\xa3\x6e\xbe\xf7\x03\xee\x2e\xe9\xf5\x02\x22\xe8\x9b\xe6\x9d\x1b\x81\xf3\xe3\xb5\xd0\xaf\x06\x21\x72\x79\x61\xf9\x50\x91\x73\x3c\x7c\x93\x90\xfa\xb5\xb9\xfa\xa5\x41\x7c\xec\x74\x03\xec\x1d\x69\x86\x57\xae\x67\x8f\x85\x2d\x46\x23\x6c\xb7\x62\x21\x13\xff\x21\x4f\x57\x13\x0f\xdf\x58\xc1\x8f\xf4\x17\xf3\x99\x27\xab\xc1\x67\x4e\x4b\xf0\x16\x55\xa0\xf3\x5a\xae\xfc\x87\x70\x24\xca\xc3\x37\x6b\x0f\xee\x1c\xbf\x51\xc3\x70\xe4\xe4\x3a\xd8\x75\xae\x19\xb6\xc6\xb2\xc5\x42\xc6\xbe\x82\x27\x52\xd2\x67\x2f\xf8\x41\xef\x5a\xe0\x7c\x79\xec\x2e\x3c\xac\x05\x61\xff\xd9\x30\xec\x9d\xf3\x1b\x21\x84\xba\x2f\xf2\xf0\x4d\xc2\xea\x03\xf9\x8f\x57\x0f\x4d\x28\xa8\x4f\x6b\x84\x1d\xef\x9a\x75\x3f\x7b\x2c\xbc\x6a\x34\xc0\x2e\xc3\xef\xef\x2d\xe9\x35\x03\x22\xe8\x27\x0a\x5d\x37\x53\xe3\xbd\xf0\x37\x56\x1e\x04\xf4\x0c\x67\xe4\x1f\xba\xcf\xf3\xf0\xcd\xde\xaf\x73\xe1\x63\xd7\x68\x68\xac\x01\x45\x06\x9a\xe0\xd5\xf1\x6c\x71\xd0\x14\xf8\xc5\x27\x78\xf8\xc6\x02\x64\xc5\xf9\xdb\x44\xd0\xa7\x0a\x5e\x37\x95\x34\x77\x1e\x82\xb7\x3c\x61\xd8\xb7\xc9\xac\xf3\x33\xfc\xf7\x8c\x72\xf1\x0f\x0f\x7f\x8a\xc5\x1c\x96\xb2\xea\xec\xd2\x75\x9e\x8e\xcf\x35\x41\x47\x57\x33\x6c\xbd\x96\xcc\x7f\x3d\xea\x74\x6c\x9d\x2b\x6b\xf8\xd0\xc5\xc6\x42\xb9\x37\xc5\xe7\xbb\x18\xc8\x74\x7f\x82\x0f\x7c\x2a\x04\x6f\x74\x85\xe0\xcd\xdd\xce\x7b\x27\x08\x01\x18\x92\x59\xf0\x4f\xe0\x78\x4a\x2e\xef\x3a\xdf\x6b\x5f\x6e\x86\x6d\x47\x9b\x61\x4b\x2c\x04\x3b\x1c\xd9\xd3\xa1\x18\x10\xb1\xfe\x1d\x16\xfc\x07\x02\xd1\x5f\xe7\xed\x4b\x26\x28\x9e\x81\x95\x2c\xf8\xcf\x36\x7e\xdd\x8a\xb6\x2e\xdf\x20\xbc\xe4\xca\xfd\x4f\x72\x81\x08\xfa\x76\x06\xfc\x73\xf9\xb6\xcb\x0d\x46\x05\x01\x7a\xa5\x50\xfe\x65\x50\xbf\xc7\xdb\x13\xd6\xb0\xd6\x45\x81\xfe\x7e\xc1\xef\x7e\xd0\x5f\xe5\xed\xcb\x5c\x60\x94\xe7\xbc\x8d\xb7\x1f\xac\x51\x8d\x2f\x7c\x91\x45\xdb\x2f\xe2\xb1\xc7\x78\xfb\x32\x17\x08\xd0\x97\x19\xf0\x7f\xb1\xb5\xb5\x73\x51\xe5\x85\xf8\x61\xec\x65\x16\xfc\xd7\x20\xbd\x95\xb7\x2f\x73\xc1\xde\xff\xa8\xf0\x3e\x00\xa8\xbf\xc3\xdb\x17\x56\xf0\xaf\xd1\x57\x31\xca\x95\xbe\xee\xd6\xbe\x5f\x02\xb5\xa0\x7e\x86\x0d\xff\xf4\x19\xde\xbe\xb0\x82\x9d\x23\x51\x78\xdb\x0f\x7a\x37\x6f\x5f\xe6\x83\x75\x7e\x03\x9b\x73\x56\xcf\x2c\x86\x35\x61\x08\xbd\xb7\x5c\x04\xfd\x3d\x16\xfc\x57\xa3\xe8\x23\xbc\xfd\xc9\x05\x0c\xcf\xe1\x2c\x99\x7d\x8f\xb3\x41\x44\x63\x5f\xb5\xf7\xc3\x2d\x94\xff\x98\xd7\x7b\xb1\x24\xd6\x43\x11\xa0\x3f\x60\xc4\x7f\x17\x6f\x5f\x58\xc0\x7c\xff\xdb\x39\xd3\xbd\x05\xf0\xef\xea\x75\xdd\xc9\x20\x30\x74\x2f\x23\xfe\x0d\xe2\xd5\x7e\x8f\xb7\x3f\x2c\xe1\x87\x0b\xc4\x0f\xfa\x0f\x45\xd0\xcf\xe4\xf7\xdd\xa7\x7f\x87\xb7\xed\xb9\xc3\xb8\x89\xd5\x79\x1e\x12\xa8\x07\x16\xe7\xd9\xb9\xc6\x4d\x22\x8e\xde\x63\xaf\x07\xb9\x3c\x17\xf7\x7e\xd0\x3f\x08\x54\x8d\x97\xd4\xbc\x17\xcb\xbc\xf6\xc5\xd0\x0f\x98\x0b\x55\x55\xa7\x6f\xf5\x43\x74\x43\xb6\x9c\xc9\x6a\xac\x3f\xcf\xdb\xc6\x7c\x21\xc3\x50\x03\x43\xfe\xcf\x2d\x74\xcf\xfe\x52\x43\xa2\xaf\xe0\xc7\xfa\xe1\xe9\x31\x1f\x7c\x5e\xe2\x6d\xd7\x42\x40\x80\x1e\x62\x16\x03\x88\xbe\xc8\xdb\x1f\xa7\x21\xa3\x23\x3f\x0a\x60\x6d\x73\xa9\xae\x79\x92\x31\xfd\x3a\xc3\x36\xc0\x20\x48\xfb\x2a\x6f\x9f\x9c\x42\x3d\xee\xaa\x57\x20\x32\x99\x9e\x07\x11\x08\x74\xba\x7a\xfc\x2f\x19\x4d\x55\xa7\x6f\x25\x40\x75\x86\x31\x30\x41\x10\x6d\xe4\xed\x57\xb1\xd1\xda\xda\xf9\x31\x05\x22\x6f\x65\x59\x03\xfd\xa1\x02\x91\x97\xc2\xd0\x73\x5f\x29\xcc\x91\x48\x88\x3e\xca\xb2\x0d\x90\x40\x3b\x1b\x44\x83\x88\xb7\x5f\xc5\x84\x82\x22\x8f\xe7\x96\x27\xd7\xfd\x4e\x18\x47\xfe\xb9\xce\xdb\x59\xcb\xdb\xe6\x6c\x50\x56\x9d\x5d\xca\xfe\x6c\x47\x6d\xa4\xd4\x62\xc0\xac\xab\x04\xa9\x8f\xcc\x77\x8e\x57\xbd\x67\xd7\xc3\x75\xd0\x75\x3d\xcf\xdc\xa8\x78\xce\x24\xea\x79\xd4\x8d\x7d\x05\x82\xe9\x5f\xb2\xe5\xdf\x92\x51\x5e\xe7\xbc\xe4\x0b\x9f\x8f\x2e\x91\x31\xdd\x9a\x64\xfb\x31\x09\xa9\x7f\x47\x7c\xb4\x2a\xf9\xba\x86\xb5\xbb\xd6\x37\xc3\x96\xd8\x4c\x6e\xd4\x2e\x23\xcf\x7c\x49\x57\xf6\x15\x14\xe5\xd0\xcd\x04\x51\xad\x08\x31\xa0\x4b\x88\xb6\xf0\xf6\x6f\x2e\x58\x7b\x7e\x67\x3f\xcf\x7c\x2a\x7e\x4e\x8c\xf6\x60\xbd\xb8\xa7\x3e\x53\x5e\x4c\x73\x52\x6e\xd4\x02\x62\xa1\x83\xb7\xff\x09\xc8\x58\xfd\x93\x22\xf0\x6f\x58\x67\x7d\x01\xfd\x36\x6f\xff\x32\x41\xf2\x6a\x8a\xd9\x4e\xe5\xe2\x87\x0c\x43\x57\xea\xa0\x6f\xa0\x09\x3a\xde\xbb\x1b\x65\xcb\x8d\xda\x6a\xac\xb3\xf2\x61\xf6\xe6\xc4\xbf\xdb\x72\xa5\x24\xa0\xff\x57\xa4\x18\x30\x08\xa6\x3b\xd3\xdb\x53\x5e\x30\xdf\xf5\x32\xa6\x8f\x11\xa0\x57\x17\xe2\x8b\x0c\x83\xd1\x06\xe8\xa2\x8d\x68\xdb\x95\xec\xf9\x30\xaf\xd8\xb9\xb3\x9d\xd9\xf2\x64\x5f\xe6\x5d\x0e\xe9\xb0\xf7\xb9\xbb\x50\xb4\x18\x00\x7a\xc9\x6c\x0b\x78\xae\x1b\x08\xe2\xe1\x7a\x86\xf3\xdf\x46\x08\x1d\x1d\x5d\x07\x7b\x46\xef\x86\xad\x93\xd9\xf2\x25\x9b\x60\x5b\x7a\x5f\xe1\xba\x82\x3a\x6b\x78\x95\xc1\x5c\x20\x58\xfd\x62\x11\xf9\xb7\xeb\x0f\xa5\x32\xd2\xee\x77\xf2\x5c\xa8\xd0\x5a\x7a\x17\x41\xda\x66\xfb\xbc\xe6\x22\xf8\xa5\x4e\x2a\x70\xf0\x78\x23\xec\x38\xd5\x8c\xb2\xe5\x4c\x9a\xb1\xb0\xdd\xa8\xc3\x7b\x5d\x3d\x5f\x40\x80\xfe\xac\xd8\x31\x60\x89\xd5\xe7\xd4\xbe\x1b\xa8\xea\x2f\xca\xdc\x99\xbd\x87\xfb\x7d\x12\x68\xdb\x19\xad\x79\x9a\x4f\x4e\x99\xfd\xc9\x56\xb4\x75\x79\x23\xda\xf1\xa3\x26\xd8\x76\x3e\xbd\xaf\xd0\x8c\xb7\x5e\xbb\xd7\xb7\xf3\xf6\x62\xf8\xcb\x0a\x4d\x55\xa7\x6f\x95\x40\x3d\xe0\x48\x0c\xc4\xc5\x7c\x0f\x6f\x93\x31\xfd\xba\xf9\x0e\x2a\xc4\xf6\x40\xa0\xff\x16\x6b\xaf\xc6\xf8\xfc\xe6\x29\x07\x7d\xb8\x26\x79\xe8\xac\xfe\x5c\x33\xda\x11\x6c\x44\x1d\x5b\x12\x39\x93\x8d\x78\x47\x49\xac\x13\x08\xad\x39\xbe\x8a\xfd\xb8\x50\x4e\x62\xd6\xd3\x01\xeb\x4c\x77\xa4\x3e\x22\x63\x75\x7d\x2d\x9c\x20\x66\x5c\x28\xab\xce\x2e\x4d\xd8\xa7\xe0\xe1\x65\x32\x1e\x16\xe3\x67\xb5\x68\x0f\x4a\x40\x9f\x21\x88\xee\x2d\xf2\xd9\xae\x59\x45\x02\xed\xa1\xf9\xca\xb4\xc1\xf7\x9a\xab\xfa\xfb\xf3\x81\x78\x68\x98\x00\xfd\x80\x47\x79\x96\x92\xc8\x98\x3e\xcd\x9b\xab\x62\x41\x42\xda\x1f\x99\x6d\x1b\xef\x32\x76\xad\x58\xf3\xde\xee\x3d\xdf\x94\x05\x82\x58\xfd\x7c\x11\xcf\xc9\x2d\x5d\x41\xda\xe6\x52\x98\xe3\x63\x01\x02\xf4\x0b\x2c\xcf\x44\x2b\x79\x41\xda\xe6\xc5\x90\xff\x90\x0f\xcc\xbe\x18\x8b\xfc\xe1\x52\x17\x19\xd4\x4d\xe6\xb7\x25\x6f\x3e\x78\x20\x88\xd4\x60\xae\x63\xe6\x8b\x50\x62\x32\xa2\x8f\xf3\xe6\x80\x37\x6a\x56\x0f\x7e\x72\x8e\x39\xb3\xc5\x2a\x97\x17\xfb\x3a\xe7\x7c\x10\x08\xf4\xdf\x22\x03\xfd\xb7\xe2\x8d\xa7\xba\x4a\x8e\xa5\xef\x79\x53\x46\x1c\x04\x86\xee\x95\x81\x52\x17\x70\x54\x0c\x89\x99\xef\xfa\xe4\x71\xa7\x32\x66\xc3\xef\x3f\xfe\x71\x82\xb5\xe7\x17\x59\x5b\x30\x68\xc6\x36\xef\xb2\x2d\x25\xd8\x79\x85\x6f\xba\x80\xbb\x42\xe4\x32\x01\xed\xbb\x37\xda\xb7\x1d\x4b\xc8\x1e\xed\x8f\xed\x31\x7c\xde\x5c\xe6\x23\x57\x09\x68\xcf\x39\x79\x4e\xf7\x62\x86\xf9\x7d\x6c\xef\x37\x7d\xc4\x05\xdc\x66\x95\xf8\xd9\xae\xda\x73\x72\xd5\xd0\x6a\xde\x65\xb6\x58\x21\x79\x35\xc5\xec\x47\x11\xa0\x1f\xf2\xe6\x7b\x9a\x77\x4c\xfb\x09\x52\x37\x06\x02\xfd\xae\x58\x83\x7b\x23\xa0\x16\x4e\xac\x90\x80\x7e\x3b\xbe\xa6\x96\xcb\x9c\xd2\x28\x01\xfa\x63\x19\x86\x1a\x78\x97\xc5\x8d\x8e\x20\x1a\x59\x6e\xed\x47\x8e\xe8\x8b\x04\xe8\x70\x91\xf8\xfe\x88\x00\xed\xb6\x72\x9c\xbc\x9a\x6b\x73\x70\xca\xb0\xc7\x14\x91\xf6\x59\x19\xd4\xef\x11\xa4\xfd\x9c\x80\xda\x63\xd7\xd7\x5c\xda\x89\x8b\xf1\xef\x35\x75\x8f\x04\xf4\x19\x19\xe8\x57\x6a\xe1\x04\x29\xf7\xe1\x17\x03\x8c\x9b\x14\xcf\xc0\x4a\x69\xad\x8a\x13\x22\x7b\x68\xc8\xe2\xd7\x33\xb0\xb2\xcc\x71\x19\x65\x94\x51\x46\x19\x8b\x1d\x86\x3b\x21\x08\x9e\x64\xf5\x52\x9a\xa5\xed\x42\xca\x05\x93\xa6\x27\x4b\x52\x2f\x4f\xfe\x0f\xf1\x1d\x05\xdb\x92\xee\x2e\x24\xdf\x60\x32\xae\x4f\xdf\x60\x22\xae\x57\xa6\xde\x6e\xe6\x86\x89\x0d\x0a\xdb\x92\xac\x31\xd1\x92\x72\xfb\xe9\x07\xc4\x12\xfa\xb2\x94\xc7\x4d\x3f\x70\x22\xa1\x57\xa6\x3e\x4e\xa8\xb0\xd4\x9f\x8e\xa6\x92\x55\x39\x6a\xdd\x7a\xda\x00\xa1\xd5\xfa\xe5\x92\x6d\x40\xcc\xbe\xf3\x64\xb2\xee\x89\x5b\xe5\x49\x3c\xbd\x2d\xee\xc5\xb2\xc4\xd3\xcd\xfb\x8c\xce\xe8\x15\xb6\x59\x4b\xe2\xd6\xdc\xb3\xc4\x36\xdb\xd6\xdb\x96\xd9\x6e\x55\xda\x7a\xc2\xed\xca\xf8\x6d\xa6\x8b\xa5\xc2\xd2\x2b\xa6\x8b\x2d\x55\x8f\x5f\xd9\x35\x5d\xce\xe9\xfa\x25\x5b\x5f\x32\x43\x4b\xdb\x6c\xfd\x52\xa2\x58\x4d\x03\xdb\x4c\xb3\x92\x74\xb3\x00\xda\x13\x7a\x2c\xae\x5f\xf2\xa4\xea\xb1\x34\xdd\x78\x6a\x26\x4c\xac\x9f\x84\x74\xbd\x25\x4d\xb7\x0d\xfa\x69\x42\xb7\xff\xc3\x53\xed\x96\xee\x49\x04\x46\x7b\x5c\xaf\x9c\xd6\xa7\x79\x61\xa3\x0b\xc2\x1d\x69\xba\x27\xae\x57\xb5\xa4\x98\x2b\x78\x12\x7a\x4b\xd2\x3f\x4f\xbb\xdf\x3e\x4b\x5f\x96\x51\x9f\x9c\xad\xb7\xc5\xf5\x25\x49\xf4\xcc\x10\x96\xae\x4f\xda\xe5\x34\x4d\x78\xbb\x90\x14\x26\x56\x3c\xd8\x7f\xd8\xfa\x64\x45\x52\x98\x98\x78\x22\x29\x4c\x4c\x8c\x27\x74\x3b\x20\x47\x5b\x6c\xdd\x26\xac\x6b\x89\x6d\x87\xcd\x78\x57\x22\xce\xe3\xf1\xdc\xd2\x6e\x5d\x68\xc7\xb9\x31\xb9\x24\xfe\x97\x49\xbb\x62\x4e\xd8\x35\x36\x66\xd7\x8f\x4b\x89\x1a\x3c\x53\x9f\xe2\x37\xb2\x2b\x5a\x7b\x42\x6f\xb7\xae\x9b\xae\x87\xe6\x85\x15\x76\x2d\x4f\xe8\x42\x8b\x75\xf9\x63\x2d\xb6\x83\x82\xf0\x35\xab\x5a\xb6\x19\xb3\xdb\x83\x99\xf6\x22\x51\x2e\x69\xed\x47\x2c\xad\x7d\x31\xd2\xda\x9f\x59\xed\x55\x7a\x7b\x36\x9a\xd6\xde\x4d\xa4\x3c\x6e\x76\x7b\x69\xa4\xde\x3e\x71\xc3\x96\x69\x7d\x34\xad\x3d\x9e\x4c\x69\x5e\xed\x1b\x24\x37\xf8\xa3\x69\xed\x7d\x2c\xa5\x79\x37\x4d\xaa\x34\x16\x86\x5f\x05\x00\x00\xff\xff\x5c\xf7\x3b\xba\x2e\xe5\x00\x00")

func faviconIcoBytes() ([]byte, error) {
	return bindataRead(
		_faviconIco,
		"favicon.ico",
	)
}

func faviconIco() (*asset, error) {
	bytes, err := faviconIcoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "favicon.ico", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"favicon.ico": faviconIco,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"favicon.ico": {faviconIco, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
